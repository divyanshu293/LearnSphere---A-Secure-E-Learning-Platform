package com.hashedin.huspark.service;


// Code Generated by Sidekick is for learning and experimentation purposes only.
import com.hashedin.huspark.model.User;
import com.hashedin.huspark.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Service;


@Service
public class AuthenticatedUserService{


    @Autowired
    private UserRepository userRepository;


    public User getAuthenticatedUser()  {
        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
        String username = null;


        if (authentication != null && authentication.isAuthenticated()) {
            Object principal = authentication.getPrincipal();
            if (principal instanceof UserDetails) {
                username = ((UserDetails) principal).getUsername();
            } else if (principal instanceof String) {
                username = (String) principal;
            }
        }


        if (username == null) {
            throw new RuntimeException("User not authenticated");
        }


        return userRepository.findByName(username);
    }
}
